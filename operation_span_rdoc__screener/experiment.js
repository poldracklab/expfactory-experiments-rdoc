const OG_CHEIN_SYMM_GRIDS = [
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
  ],
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
  ],
  [
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
  ],
  [
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
  ],
  [
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
  ],
  [
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
  ],
  [
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
  ],
  [
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
  ],
  [
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
  ],
  [
    "white",
    "white",
    "black",
    "black",
    "black",
    "black",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "white",
    "black",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "white",
    "white",
    "white",
    "black",
    "white",
    "black",
    "white",
    "black",
    "white",
    "white",
    "black",
    "white",
    "black",
  ],
];

/* ************************************ * /
/* Define helper functions */
/* ************************************ */
// common
// PARAMETERS FOR DECAYING EXPONENTIAL FUNCTION
var meanITI = 5;
function sampleFromDecayingExponential() {
  // Decay parameter of the exponential distribution λ = 1 / μ
  var lambdaParam = 1 / meanITI;
  var minValue = 2;
  var maxValue = 20;

  /**
   * Sample one value with replacement
   * from a decaying exponential distribution within a specified range.
   *
   * @param {number} lambdaParam
   * - The decay parameter lambda of the exponential distribution.
   * @param {number} minValue - The minimum value of the range.
   * @param {number} maxValue - The maximum value of the range.
   * @returns {number}
   * A single value sampled from the decaying
   * exponential distribution within the specified range.
   */
  var sample;
  do {
    sample = -Math.log(Math.random()) / lambdaParam;
  } while (sample < minValue || sample > maxValue);
  return sample;
}

function calculatePartialAccuracy(trials) {
  if (trials.length === 0) return 0; // Handle case where trials array is empty

  const totalAccuracy = trials.reduce((acc, trial) => {
    const { response, spatial_sequence } = trial;
    const correctCount = spatial_sequence.filter(item =>
      response.includes(item)
    ).length;
    const accuracy = correctCount / spatial_sequence.length;
    return acc + accuracy;
  }, 0);

  const partialAccuracy = totalAccuracy / trials.length;
  return partialAccuracy;
}

function shuffleArray(array) {
  // Create a copy of the original array to avoid modifying it directly
  const shuffledArray = array.slice();

  // Perform Fisher-Yates shuffle
  for (let i = shuffledArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];
  }

  return shuffledArray;
}

function generateSpatialTrialValues(n) {
  const possibleValues = Array.from({ length: 16 }, (_, i) => i);
  const randomList = [];

  for (let i = 0; i < n; i++) {
    const randomIndex = Math.floor(Math.random() * possibleValues.length);
    randomList.push(possibleValues[randomIndex]);
    possibleValues.splice(randomIndex, 1);
  }

  return randomList;
}

var tutorialTrialList = [5, 1, 7, 11];

var trialValue;

var getStim = function (auto = false) {
  if (auto) {
    let html = '<div class="container">';

    const trialIndex = tutorialTrialList.shift();

    for (var i = 0; i < 16; i++) {
      if (i === trialIndex) {
        html += '<div class="box active-box"></div>';
      } else {
        html += '<div class="box"></div>';
      }
    }
    trialValue = trialIndex;
    html += "</div>";
    return html;
  }

  let html = '<div class="container">';

  const trialIndex = trialList.shift();

  for (var i = 0; i < 16; i++) {
    if (i === trialIndex) {
      html += '<div class="box active-box"></div>';
    } else {
      html += '<div class="box"></div>';
    }
  }
  trialValue = trialIndex;
  html += "</div>";
  return html;
};

function generateRandomGrid(size) {
  const grid = new Array(size);
  for (let i = 0; i < size; i++) {
    grid[i] = Math.random() < 0.5 ? 0 : 1;
  }
  return grid;
}

function areArraysAsymmetric(arr1, arr2) {
  // Check if arrays are asymmetric (values at each index are not the same)
  return !arr1.every((val, index) => val === arr2[index]);
}

function makeAsymmetricArrays() {
  const size = 32;
  let firstGrid = generateRandomGrid(size);
  let secondGrid = generateRandomGrid(size);

  while (areArraysAsymmetric(firstGrid, secondGrid) === false) {
    // Keep generating new arrays until they become asymmetric
    firstGrid = generateRandomGrid(size);
    secondGrid = generateRandomGrid(size);
  }
  return [firstGrid, secondGrid];
}

function makeAsymmetricArrays() {
  const size = 32;
  const firstGrid = generateRandomGrid(size);
  const secondGrid = generateRandomGrid(size);

  return [{ firstGrid: firstGrid, secondGrid: secondGrid, symmetric: false }];
}

var cheinSymmGrids = [];

function makeCheinSymmGrids() {
  for (i = 0; i < OG_CHEIN_SYMM_GRIDS.length; i++) {
    var grid = [];
    for (j = 0; j < 8 * 8; j++) {
      if (OG_CHEIN_SYMM_GRIDS[i][j] == "black") {
        colorValue = 0;
      } else {
        colorValue = 1;
      }
      grid.push(colorValue);
    }

    symmetric = false;

    for (let i = 0; i < grid.length; i += 8) {
      const group1 = grid.slice(i, i + 4);
      const group2 = grid.slice(i + 4, i + 8);
      if (
        group1[0] == group2[3] &&
        group1[1] == group2[2] &&
        group1[2] == group2[1] &&
        group1[3] == group2[0]
      ) {
        symmetric = true;
      } else {
        break;
      }
    }
    cheinSymmGrids.push({ grid, symmetric });
  }
}

var asymmetricGrids = [];

function makeAsymmetricGrids() {
  for (var i = 0; i < 100; i++) {
    var obj = makeAsymmetricArrays()[0];
    var grid = combineArrays(obj.firstGrid, obj.secondGrid);
    asymmetricGrids.push({ grid: grid, symmetric: obj.symmetric });
  }
}

makeAsymmetricGrids();
makeCheinSymmGrids();

var bothGrids = shuffleArray(asymmetricGrids.concat(cheinSymmGrids));

var getRandomSpatial = function (auto = false) {
  console.log("auto: ", auto);
  if (bothGrids.length == 0) {
    makeCheinSymmGrids();
    makeAsymmetricGrids();
    bothGrids = shuffleArray(cheinSymmGrids.concat(asymmetricGrids));
  }
  if (auto) {
    const stim = bothGrids.shift();
    spatialAns = stim.symmetric;
    return generateDistractorGrid(stim);
  } else {
    const stim = bothGrids.shift();
    spatialAns = stim.symmetric;
    return generateDistractorGrid(stim);
  }
};

function getProcessingStimProperties(htmlString) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(htmlString, "text/html");
  const divs = doc.querySelectorAll(".container > div");
  const classList = Array.from(divs).map(div => div.className);

  const parsedClassList = classList.map(item => {
    if (item === "distractor-box active-box") {
      return "black";
    } else if (item === "distractor-box") {
      return "gray";
    } else {
      return item;
    }
  });

  return parsedClassList;
}

var submittedAnswers = [];
var timestampsSubmissions = [];
var timestampsMovingThroughGrid = [];
var trackingCellMovingThroughGrid = [];
var startingCellInGrid;

var generateGrid = function (auto = false) {
  var randomIndex = auto ? 6 : Math.floor(Math.random() * 16);
  startingCellInGrid = randomIndex;

  // Variable to store the initial call time
  let initialCallTime = Date.now();

  let activeIndex = randomIndex;
  const activeBoxes = [];

  let html = '<div class="container">';
  for (var i = 0; i < 16; i++) {
    if (i === randomIndex) {
      html += '<div class="box response-active"></div>';
      activeBoxes.push(i);
    } else {
      html += '<div class="box"></div>';
    }
  }
  html += "</div>";

  let spacebarCount = 0;
  const selectedIndexes = [];

  // Declare a variable to store the setTimeout ID
  let timeoutId;
  function handleKeyDown(event) {
    if (auto && event.isTrusted) return;

    let currentTime = Date.now();
    let timeDifference = currentTime - initialCallTime;
    timestampsMovingThroughGrid.push(timeDifference); // Store timestamp

    const key = event.key;
    const container = document.querySelector(".container");
    const boxes = container.querySelectorAll(".box");

    // Remove active-box class from all boxes
    boxes.forEach(function (box) {
      box.classList.remove("spacebar-box");
    });

    // Update activeIndex based on arrow key input
    let newActiveIndex = activeIndex;
    if (key === "ArrowLeft" && activeIndex % 4 !== 0) {
      newActiveIndex = activeIndex - 1;
    } else if (key === "ArrowRight" && activeIndex % 4 !== 3) {
      newActiveIndex = activeIndex + 1;
    } else if (key === "ArrowUp" && activeIndex >= 4) {
      newActiveIndex = activeIndex - 4;
    } else if (key === "ArrowDown" && activeIndex < 12) {
      newActiveIndex = activeIndex + 4;
    }

    trackingCellMovingThroughGrid.push(newActiveIndex);

    if (newActiveIndex !== activeIndex) {
      // Remove active-box class from all boxes
      boxes.forEach(function (box) {
        box.classList.remove("response-active");
      });
    }

    if (newActiveIndex !== activeIndex) {
      activeIndex = newActiveIndex;
      boxes[activeIndex].classList.add("response-active"); // Add active-box class for arrow key navigation
    }

    if (key === " ") {
      let currentTime = Date.now();
      let timeDifference = currentTime - initialCallTime;
      timestampsSubmissions.push(timeDifference); // Store timestamp

      if (spacebarCount < 4) {
        boxes[activeIndex].classList.add("spacebar-box"); // Add spacebar-box class for spacebar selection
        activeBoxes.push(activeIndex);
        selectedIndexes.push(activeIndex);
        spacebarCount++;
        submittedAnswers.push(activeIndex);
      }

      // Clear any existing setTimeout calls
      clearTimeout(timeoutId);

      timeoutId = setTimeout(() => {
        if (key !== " ") {
          boxes[activeIndex].classList.remove("response-active"); // Remove active-box class if the arrow key was pressed
        }
        boxes[activeIndex].classList.remove("spacebar-box"); // Remove spacebar-box class for spacebar selection
      }, 200);
    }
  }
  // Attach the event listener
  document.addEventListener("keydown", handleKeyDown);

  if (auto) {
    setTimeout(() => {
      activateArrow("left");
    }, 200);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowLeft",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 400);

    setTimeout(() => {
      activateSpacebar();
    }, 700);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", { key: " ", isTrusted: false });
      document.dispatchEvent(event);
    }, 800);

    setTimeout(() => {
      activateArrow("up");
    }, 1000);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowUp",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 1300);

    setTimeout(() => {
      activateSpacebar();
    }, 1500);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", { key: " ", isTrusted: false });
      document.dispatchEvent(event);
    }, 1600);

    setTimeout(() => {
      activateArrow("right");
    }, 1800);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowRight",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 2000);

    setTimeout(() => {
      activateArrow("right");
    }, 2200);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowRight",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 2400);

    setTimeout(() => {
      activateArrow("down");
    }, 2600);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowDown",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 2800);

    setTimeout(() => {
      activateArrow("down");
    }, 3000);

    setTimeout(() => {
      activateSpacebar();
    }, 3100);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", { key: " ", isTrusted: false });
      document.dispatchEvent(event);
    }, 3200);

    setTimeout(() => {
      activateArrow("down");
    }, 3400);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", {
        key: "ArrowDown",
        isTrusted: false,
      });
      document.dispatchEvent(event);
    }, 3700);

    setTimeout(() => {
      activateSpacebar();
    }, 3900);

    setTimeout(() => {
      let event = new KeyboardEvent("keydown", { key: " ", isTrusted: false });
      document.dispatchEvent(event);
    }, 4000);
  }

  function resetGrid() {
    activeBoxes.length = 0; // Clear the activeBoxes array
    selectedIndexes.length = 0; // Clear the selectedIndexes array
    spacebarCount = 0;

    // Remove the event listener
    document.removeEventListener("keydown", handleKeyDown);

    // Clear any remaining state or perform other necessary actions
    submittedAnswers = [];

    // Also reset the initial call time when the grid is reset
    initialCallTime = Date.now();
  }

  return { html, resetGrid };
};

function combineArrays(array1, array2) {
  if (array1.length % 4 !== 0 || array2.length % 4 !== 0) {
    throw new Error("Both arrays must have a length that is a multiple of 4.");
  }

  const combinedArray = [];

  for (let i = 0; i < array1.length; i += 4) {
    combinedArray.push(...array1.slice(i, i + 4), ...array2.slice(i, i + 4));
  }

  return combinedArray;
}

var generateDistractorGrid = function (stim) {
  let html = '<div class="container">';
  const grid = stim.grid;

  for (let i = 0; i < grid.length; i++) {
    if (grid[i] == 1) {
      html += '<div class="distractor-box active-box"></div>';
    } else {
      html += '<div class="distractor-box"></div>';
    }
  }

  html += "</div>";

  return html;
};

const getInstructFeedback = () =>
  `<div class="centerbox"><p class="center-block-text">${feedbackInstructText}</p></div>`;

const getFeedback = () =>
  `<div class="bigbox"><div class="picture_box"><p class="block-text">${feedbackText}</p></div></div>`;

const getCurrSeq = () => currSeq;

const getCurrCondition = () => currCondition;

const getCurrBlockNum = () => practiceCount;

/* ************************************ */
/* Define experimental variables */
/* ************************************ */
// common variables

var endText = `
  <div class="centerbox">
    <p class="center-block-text">Thanks for completing this task!</p>
    <p class="center-block-text">Press <i>enter</i> to continue.</p>
  </div>
`;

var feedbackInstructText = `
  <p class="center-block-text">
    Welcome! This experiment will take a couple of minutes.
  </p>
  <p class="center-block-text">
    To avoid technical issues, please keep the experiment tab (on Chrome or Firefox) active and in fullscreen mode for the whole duration of each task.
  </p>
  <p class="center-block-text"> Press <i>enter</i> to begin.</p>
`;

var speedReminder =
  "<p class = block-text>Try to respond as quickly and accurately as possible.</p>";

var spanResponses = [
  "left arrow key",
  "right arrow key",
  "up arrow key",
  "down arrow key",
  "spacebar",
];

// *Timing:
// stimulus and fixation
const stimStimulusDuration = 1000;
const stimTrialDuration = 1000;
const processingStimulusDuration = 3000;
const processingTrialDuration = 3000;
const responseBlockDuration = 5000;

var runAttentionChecks = true;
var sumInstructTime = 0; // ms
var instructTimeThresh = 1; // /in seconds

var partialAccuracyThresh = 0.75;

var practiceThresh = 3;

var processingChoices;

function getKeyMappingForTask(group_index) {
  if (group_index % 2 === 0) {
    processingChoices = [
      { keycode: "ArrowLeft", keyname: "left arrow key" },
      { keycode: "ArrowRight", keyname: "right arrow key" },
    ];
  } else {
    processingChoices = [
      { keycode: "ArrowRight", keyname: "right arrow key" },
      { keycode: "ArrowLeft", keyname: "left arrow key" },
    ];
  }
}

var group_index =
  typeof window.efVars !== "undefined" ? window.efVars.group_index : 1;

getKeyMappingForTask(group_index);

var processingAccThresh = 0.85;
var processingRTThresh = 1000;

var practiceLen = 1;
var trialList;

var spatialAns;

var currCondition = "operation";

var numStimuli = 4;

var expStage = "practice";
var currSeq = [];

var practicePromptResponse = `<div class = prompt_box_response>
  <p class = center-block-text style = "font-size:16px; line-height:80%%;">Use the <b>arrow keys</b> to navigate the grid and the <b>spacebar</b> to select the cells colored black in the order they were shown.
  </p>
</div>`;

var tutorialPromptResponse = `<div class = prompt_box_response>
  <p class = center-block-text style = "font-size:16px; line-height:80%%;">Step 3 -> Use the <b>arrow keys</b> to navigate the grid and the <b>spacebar</b> to select the cells colored black in the order they were shown.
  </p>
</div>
<div class="arrows-container">
  <div class="top-container">
    <div class="arrow-box">
      <i class="arrow up"></i>
    </div>
  </div>
  <div class="bottom-container">
    <div class="spacebar-btn">
      <i class="spacebar"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow left"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow down"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow right"></i>
    </div>
  </div>
</div>
`;

var promptText = `<div class=prompt_box_operation>
    <p class = center-block-text style = "font-size:16px; line-height:80%%;">Memorize all the black colored cells.</p>
    <p class = center-block-text style = "font-size:16px; line-height:80%%;">Press <b>"left arrow key"</b> if 8x8 is <b>${
      processingChoices[0].keyname === "left arrow key"
        ? "symmetric"
        : "asymmetric"
    }</b> and <b>"right arrow key"</b> if <b>${
      processingChoices[0].keyname === "left arrow key"
        ? "asymmetric"
        : "symmetric"
    }</b>.</p>
  </div>`;

var tutorialText = `<div class=prompt_box_operation>
    <p class = center-block-text style = "font-size:16px; line-height:80%%;">Step 1 -> Respond to processing grid.</p>
    <p class = center-block-text style = "font-size:16px; line-height:80%%;">Press <b>"left arrow key"</b> if 8x8 is <b>${
      processingChoices[0].keyname === "left arrow key"
        ? "symmetric"
        : "asymmetric"
    }</b> and <b>"right arrow key"</b> if <b>${
      processingChoices[0].keyname === "left arrow key"
        ? "asymmetric"
        : "symmetric"
    }</b>.</p>
</div>
<div class="arrows-container">
  <div class="top-container">
    <div class="arrow-box">
      <i class="arrow up"></i>
    </div>
  </div>
  <div class="bottom-container">
    <div class="spacebar-btn">
      <i class="spacebar"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow left"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow down"></i>
    </div>
    <div class="arrow-box">
      <i class="arrow right"></i>
    </div>
  </div>
</div>

`;

var tutorialPromptText = `<div class=prompt_box_operation>
    <p class = center-block-text style = "font-size:16px; line-height:80%%;">Step 2 -> Memorize all the black colored cells.</p>
  </div>
  <div class="arrows-container">
    <div class="top-container">
      <div class="arrow-box">
        <i class="arrow up"></i>
      </div>
    </div>
    <div class="bottom-container">
      <div class="spacebar-btn">
        <i class="spacebar"></i>
      </div>
      <div class="arrow-box">
        <i class="arrow left"></i>
      </div>
      <div class="arrow-box">
        <i class="arrow down"></i>
      </div>
      <div class="arrow-box">
        <i class="arrow right"></i>
      </div>
    </div>
  </div>
  `;

/* ************************************ */
/* Set up jsPsych blocks */
/* ************************************ */

var feedbackInstructBlock = {
  type: jsPsychHtmlKeyboardResponse,
  choices: ["Enter"],
  data: {
    trial_id: "instruction_feedback",
    trial_duration: 180000,
  },
  stimulus: getInstructFeedback,
  trial_duration: 180000,
};

var opSpanInstructions = `
  <div class="centerbox">
    <p class="block-text">Place your fingers on the arrow keys.</p>
    <p class="block-text">
      During this task, you will first encounter an 8x8 grid filled with black and gray cells. You have to determine if the grid is ${
        processingChoices[0].keyname === "left arrow key"
          ? "symmetric"
          : "asymmetric"
      } or ${
        processingChoices[0].keyname === "left arrow key"
          ? "asymmetric"
          : "symmetric"
      }.
      Press the <b>left arrow key</b> if the grid is <b>${
        processingChoices[0].keyname === "left arrow key"
          ? "symmetric"
          : "asymmetric"
      }</b> and press the <b>right arrow key</b> if it is <b>${
        processingChoices[0].keyname === "left arrow key"
          ? "asymmetric"
          : "symmetric"
      }</b>.
    </p>
    <p class="block-text">
      When you make a response, a new 8x8 grid will immediately appear, and you should complete as many correct symmetry judgments as you can. Then a single 4x4 grid will appear. This grid will have one cell colored black. Try to remember the location of the black cell.
    </p>
    <p class="block-text">
      This sequence of 8x8 grids and 4x4 grid will alternate four times. After the fourth time, a blank 4x4 grid will be presented.
    </p>
    <p class="block-text">
      On the blank 4x4 grid, use the <b>arrow keys</b> to navigate the grid and the <b>spacebar</b> to select the cells you think were colored black in the preceding 4 4x4 grids. Please select them in the order they were shown (i.e., respond with the location of the first black square in the 4x4 grid, then the 2nd, …).
    </p>
  </div>
`;

var reminderInstruct = `
  <div class="centerbox">
    <p class="block-text">
      During the practice round, you will receive feedback and a reminder of the rules. These will be removed for the actual test, so make sure that you understand the instructions before moving on.
    </p>
    <p class="block-text">${speedReminder}</p>
  </div>
`;

var instructionsBlock = {
  type: jsPsychInstructions,
  pages: [opSpanInstructions, reminderInstruct],
  allow_keys: false,
  data: {
    trial_id: "instructions",
    trial_duration: null,
    stimulus: [opSpanInstructions, reminderInstruct],
  },
  show_clickable_nav: true,
};

var instructionNode = {
  timeline: [feedbackInstructBlock, instructionsBlock],
  loop_function: function (data) {
    for (i = 0; i < data.trials.length; i++) {
      if (
        data.trials[i].trial_id == "instructions" &&
        data.trials[i].rt != null
      ) {
        rt = data.trials[i].rt;
        sumInstructTime += rt;
      }
    }
    if (sumInstructTime <= instructTimeThresh * 1000) {
      feedbackInstructText =
        "<p class=block-text>Read through instructions too quickly. Please take your time and make sure you understand the instructions.</p><p class=block-text>Press <i>enter</i> to continue.</p>";
      return true;
    } else if (sumInstructTime > instructTimeThresh * 1000) {
      feedbackInstructText =
        "<p class=block-text>Done with instructions. Press <i>enter</i> to continue.</p>";
      return false;
    }
  },
};

var feedbackText = `<div class = centerbox>
  <p class="block-text">
    You are about to start a tutorial that will guide you
    through the sequence of events in a trial.
  </p>
  <p class="block-text">
   You do not need to respond during this tutorial, as all
   responses will be simulated automatically.
  <p class="block-text">
   This tutorial is designed to clearly illustrate the tasks and responses
   expected of you during the actual practice trials.
  </p>

  <p class="block-text">
  Please pay close attention to the sequence of responses.
  Understanding when and how you will be responding is crucial
  for your completion of the practice trials.
  </p>

  <p class="block-text">
  At the end of the tutorial, you will be asked if
  you would like to repeat the tutorial or proceed.

  If you choose "Yes," you will repeat the tutorial to better familiarize
  yourself with the trial's events. Choosing "No" will advance you to the practice trials.
  </p>

  <p class="block-text">
  The tutorial will begin on the next page. Press <i>enter</i> to begin.
  </p>
  </div>`;

var repeatFeedbackText = `<div class = centerbox>
  <p class="block-text">
    You selected to repeat the tutorial.
  </p>
  <p class="block-text">
    This tutorial will guide you through the sequence of events in a trial.
  </p>
  <p class="block-text">
   You do not need to respond during this tutorial, as all
   responses will be simulated automatically.
  <p class="block-text">
   This tutorial is designed to clearly illustrate the tasks and responses
   expected of you during the actual practice trials.
  </p>

  <p class="block-text">
  Please pay close attention to the sequence of responses.
  Understanding when and how you will be responding is crucial
  for your completion of the practice trials.
  </p>

  <p class="block-text">
  At the end of the tutorial, you will be asked if
  you would like to repeat the tutorial or proceed.

  If you choose "Yes," you will repeat the tutorial to better familiarize
  yourself with the trial's events. Choosing "No" will advance you to the practice trials.
  </p>

  <p class="block-text">
  The tutorial will begin on the next page. Press <i>enter</i> to begin.
  </p>
  </div>`;

var feedbackBlock = {
  type: jsPsychHtmlKeyboardResponse,
  data: function () {
    return {
      trial_id: "practice_feedback",
      exp_stage: "practice",
      trial_duration: 60000,
      block_num: practiceCount,
    };
  },
  choices: ["Enter"],
  stimulus: getFeedback,
  trial_duration: 60000,
  response_ends_trial: true,
};

var expStage = "practice";

var stimulusBlock = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    return getStim();
  },
  stimulus_duration: stimStimulusDuration,
  trial_duration: stimTrialDuration,
  data: function () {
    return {
      trial_id: "practice_stim",
      exp_stage: "practice",
      condition: getCurrCondition(),
      trial_duration: stimTrialDuration,
      stimulus_duration: stimStimulusDuration,
      block_num: practiceCount,
    };
  },
  choices: ["NO_KEYS"],
  prompt: function () {
    return promptText;
  },
  on_finish: function (data) {
    data["spatial_location"] = trialValue;
    data["block_num"] = practiceCount;
  },
};

var tutorialStimulusBlock = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    return getStim(true);
  },
  stimulus_duration: 1000,
  trial_duration: 1000,
  data: function () {
    return {
      trial_id: "tutorial_stim",
    };
  },
  choices: ["NO_KEYS"],
  prompt: tutorialPromptText,
};

var startTime = null;
var checkTime = null;
var endTime = null;
var timeLeft = null;

var initializingTrialIDs = new Set([
  "practice_feedback",
  "practice_ITI",
  "test_ITI",
  "test_attention_check",
  "practice_stim",
  "test_stim",
]);

var waitBlock = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    return getRandomSpatial();
  },
  choices: [processingChoices[0].keycode, processingChoices[1].keycode],
  response_ends_trial: true,
  trial_duration: function () {
    var { trial_id } = jsPsych.data.get().last(1).trials[0];

    if (
      trial_id === "practice_inter-stimulus" ||
      trial_id === "test_inter-stimulus"
    ) {
      timeLeft = processingTrialDuration - endTime;
      return timeLeft;
    } else {
      return processingTrialDuration;
    }
  },
  on_start: function () {
    var { trial_id } = jsPsych.data.get().last(1).trials[0];
    if (initializingTrialIDs.has(trial_id)) {
      startTime = performance.now();
      trialList = generateSpatialTrialValues(numStimuli);
    }
  },
  data: function () {
    return {
      trial_id: "practice_inter-stimulus",
      exp_stage: "practice",
      condition: getCurrCondition(),
      choices: [processingChoices[0].keycode, processingChoices[1].keycode],
      block_num: practiceCount,
    };
  },
  on_finish: function (data) {
    let processingStimProperties = getProcessingStimProperties(data.stimulus);
    data["order_and_color_of_processing_boxes"] = processingStimProperties;
    data["block_num"] = practiceCount;
    data["correct_spatial_judgement_key"] =
      spatialAns === true
        ? processingChoices[0].keycode.toLowerCase()
        : processingChoices[1].keycode.toLowerCase();
    data["grid_symmetry"] = spatialAns === true ? "symmetric" : "asymmetric";

    // Handling "omissions"
    if (timeLeft === null) {
      if (data.response === null) {
        data["response"] = -1;
      }
    } else {
      if (data.response === null) {
        if (timeLeft > processingRTThresh) {
          data["response"] = -1;
        }
      }
    }

    if (data.response === null || data.response === -1) {
      data["correct_trial"] = null;
    } else {
      if (spatialAns === true) {
        if (data.response === processingChoices[0].keycode.toLowerCase()) {
          data["correct_trial"] = 1;
        } else {
          data["correct_trial"] = 0;
        }
      } else {
        if (data.response === processingChoices[0].keycode.toLowerCase()) {
          data["correct_trial"] = 0;
        } else {
          data["correct_trial"] = 1;
        }
      }
    }
  },
  prompt: function () {
    return promptText;
  },
};

var waitNode = {
  timeline: [waitBlock],
  loop_function: function () {
    checkTime = performance.now();

    endTime = checkTime - startTime;

    if (endTime >= processingTrialDuration) {
      return false;
    }

    return true;
  },
};

function arraysAreEqual(array1, array2) {
  if (array1.length !== array2.length) {
    return false;
  }

  for (let i = 0; i < array1.length; i++) {
    if (array1[i] !== array2[i]) {
      return false;
    }
  }

  return true;
}

var activeGrid;

var practiceFeedbackBlock = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    var last = jsPsych.data.get().last(1).trials[0];
    if (last.correct_trial == null) {
      return "<div class=center-box><div class='center-text'><font size =20>Respond Faster!</font></div></div>";
    } else if (last.correct_trial == 1) {
      return "<div class=center-box><div class='center-text'><font size =20>Correct!</font></div></div>";
    } else {
      return "<div class=center-box><div class='center-text'><font size =20>Incorrect</font></div></div>";
    }
  },
  data: function () {
    return {
      exp_stage: "practice",
      trial_id: "practice_feedback",
      trial_duration: 500,
      stimulus_duration: 500,
      block_num: practiceCount,
    };
  },
  choices: ["NO_KEYS"],
  stimulus_duration: 500,
  trial_duration: 500,
};

var testTrial = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    activeGrid = generateGrid();
    return activeGrid.html;
  },
  choices: ["NO_KEYS"],
  data: function () {
    return {
      trial_id: "practice_trial",
      exp_stage: "practice",
      choices: ["NO_KEYS"],
      trial_duration: responseBlockDuration,
      stimulus_duration: responseBlockDuration,
    };
  },
  trial_duration: responseBlockDuration,
  stimulus_duration: responseBlockDuration,
  prompt: function () {
    return practicePromptResponse;
  },
  on_finish: function (data) {
    var stimTrials = jsPsych.data
      .get()
      .filter({ trial_id: "practice_stim" }).trials;

    var lastTrials = stimTrials.slice(-4);
    var correctResponses = lastTrials.map(trial => trial.spatial_location);

    data["response"] = submittedAnswers;

    if (submittedAnswers.length < 4) {
      data["correct_trial"] = null;
    } else if (submittedAnswers.length == 4) {
      const correct = arraysAreEqual(correctResponses, submittedAnswers);
      data["correct_trial"] = correct ? 1 : 0;
    }

    data["condition"] = getCurrCondition();

    var lastInterStimTrials = jsPsych.data
      .get()
      .filter({ trial_id: "practice_stim" });

    var lastInterStimTrialsCorrectAnswers = lastInterStimTrials.trials
      .slice(-4)
      .map(trial => trial.spatial_location);

    data["starting_cell_in_grid"] = startingCellInGrid;

    data["spatial_sequence"] = lastInterStimTrialsCorrectAnswers;
    data["block_num"] = practiceCount;
    data["rt_each_spatial_location_response_grid"] =
      timestampsSubmissions.slice(0, 4);

    data["rt_moving_each_spatial_location_response_grid"] =
      timestampsMovingThroughGrid;

    data["moving_order_spatial_location"] = trackingCellMovingThroughGrid;

    trackingCellMovingThroughGrid = [];
    timestampsSubmissions = [];
    timestampsMovingThroughGrid = [];

    activeGrid.resetGrid();
  },
};

var ITIms = null;

// *** ITI *** //
var ITIBlock = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: "<div class = centerbox><div class = fixation>+</div></div>",
  is_html: true,
  choices: ["NO_KEYS"],
  data: function () {
    return {
      trial_id: "practice_ITI",
      ITIParams: {
        min: 2,
        max: 20,
        mean: 5,
      },
      block_num: practiceCount,
      exp_stage: "practice",
      condition: getCurrCondition(),
    };
  },
  trial_duration: function () {
    ITIms = sampleFromDecayingExponential();
    return ITIms * 1000;
  },
  on_finish: function (data) {
    data["trial_duration"] = ITIms * 1000;
    data["stimulus_duration"] = ITIms * 1000;
  },
};

var tutorialTestTrial = {
  type: jsPsychHtmlKeyboardResponse,
  stimulus: function () {
    activeGrid = generateGrid(true);
    return activeGrid.html;
  },
  choices: ["NO_KEYS"],
  data: function () {
    return {
      trial_id: "tutorial_test_trial",
    };
  },
  trial_duration: 5000,
  stimulus_duration: 5000,
  prompt: tutorialPromptResponse,
};

var tutorialSurvey = {
  type: jsPsychSurvey,
  pages: [
    [
      {
        type: "multi-choice",
        prompt:
          'You just completed the tutorial. Are you ready to proceed to the practice? Select "No" if you would like to repeat the tutorial once more.',
        options: ["Yes", "No"],
        name: "repeat_tutorial",
        required: true,
      },
    ],
  ],
};

var tutorialSurvey = {
  type: jsPsychSurvey,
  pages: [
    [
      {
        type: "multi-choice",
        prompt:
          'You just completed the tutorial. Are you ready to proceed to the practice? Select "No" if you would like to repeat the tutorial once more.',
        options: ["Yes", "No"],
        name: "repeat_tutorial",
        required: true,
      },
    ],
  ],
};

var tutorialSurveyNode = {
  timeline: [tutorialSurvey],
  conditional_function: function () {
    console.log(tutorialBlockNum);
    if (tutorialBlockNum === 0) {
      return true;
    } else {
      return false;
    }
  },
};

function activateArrow(arrow) {
  const ele = document.querySelector(`.${arrow}`).parentNode;
  ele.classList.add("activated");

  setTimeout(function () {
    ele.classList.remove("activated");
  }, 200);
}

function activateSpacebar() {
  const ele = document.querySelector(`.spacebar-btn`);
  ele.classList.add("activated");

  setTimeout(function () {
    ele.classList.remove("activated");
  }, 200);
}

function generateTutorialBlocks() {
  var returnArray = [];

  for (let i = 0; i < 7; i++) {
    var tutorialBlock = {
      type: jsPsychHtmlKeyboardResponse,
      stimulus: function () {
        return getRandomSpatial(true);
      },
      data: function () {
        return {
          trial_id: "tutorial_test_block",
        };
      },
      on_start: function () {
        if (processingChoices[0].keycode === "ArrowLeft") {
          if (spatialAns === true) {
            var direction = "left";
          } else {
            var direction = "right";
          }
        } else {
          if (spatialAns === true) {
            var direction = "right";
          } else {
            var direction = "left";
          }
        }

        setTimeout(function () {
          activateArrow(direction);
        }, 800);
      },
      choices: "NO_KEYS",
      prompt: tutorialText,
      trial_duration: 1200,
    };

    returnArray.push(tutorialBlock);
  }

  return returnArray;
}

var tutorialBlocks = generateTutorialBlocks();

var tutorialNode = {
  timeline: tutorialBlocks.splice(0, 2),
};

function generateTutorialTrials() {
  var returnArray = [];

  for (let i = 0; i < 1; i++) {
    for (let j = 0; j < numStimuli; j++) {
      returnArray.push(tutorialNode, tutorialStimulusBlock);
    }
    returnArray.push(tutorialTestTrial, ITIBlock);
  }

  returnArray.push(tutorialSurveyNode);

  return returnArray;
}

function generatePracticeTrials() {
  var returnArray = [];

  for (let i = 0; i < practiceLen; i++) {
    for (let j = 0; j < numStimuli; j++) {
      returnArray.push(waitNode, stimulusBlock);
    }
    returnArray.push(testTrial, practiceFeedbackBlock, ITIBlock);
  }

  return returnArray;
}

var practiceTrials = generatePracticeTrials();

var tutorialBlockNum = 0;
var tutorial = {
  timeline: [feedbackBlock].concat(generateTutorialTrials()),
  loop_function: function () {
    tutorialBlockNum += 1; // Increment the block number

    if (tutorialBlockNum === 2) {
      feedbackText =
        "<p class='block-text'>Press <i>enter</i> to begin practice.</p>";
      return false;
    }

    var data = jsPsych.data.get().last(1).trials[0];
    var repeatTutorial = data.response.repeat_tutorial;

    if (repeatTutorial === "No") {
      feedbackText =
        "<p class='block-text'>Press <i>enter</i> to begin practice.</p>";
      return false;
    } else {
      feedbackText = repeatFeedbackText;
      tutorialTrialList = [5, 1, 7, 11];
      return true;
    }
  },
};

// loop based on criteria
var practiceCount = 0;
var practiceNode = {
  timeline: [feedbackBlock].concat(practiceTrials),
  loop_function: function () {
    var responseGridData = jsPsych.data.get().filter({
      trial_id: "practice_trial",
      condition: getCurrCondition(),
      block_num: getCurrBlockNum(),
    }).trials;
    var partialAccuracy = calculatePartialAccuracy(responseGridData);

    practiceCount += 1;

    var responseProcessingData = jsPsych.data.get().filter({
      trial_id: "practice_inter-stimulus",
      condition: "operation",
      block_num: getCurrBlockNum() - 1, // since already indexed block above
    }).trials;

    var processingCorrect = 0;
    var totalTrials = 0;
    var rt = 0;

    for (var i = 0; i < responseProcessingData.length; i++) {
      if (responseProcessingData[i].response === -1) {
        totalTrials += 1;
      } else {
        if (responseProcessingData[i].rt !== null) {
          totalTrials += 1;

          if (responseProcessingData[i].correct_trial === 1) {
            processingCorrect += 1;
            rt += responseProcessingData[i].rt;
          }
        }
      }
    }

    var avgProcessingAcc = processingCorrect / totalTrials;
    var avgProcessingRT = rt / processingCorrect;
    var canProceedToTest;

    if (practiceCount === practiceThresh) {
      canProceedToTest = true;
    } else {
      if (
        partialAccuracy >= partialAccuracyThresh &&
        avgProcessingAcc > processingAccThresh &&
        avgProcessingRT < processingRTThresh
      ) {
        canProceedToTest = true;
      } else {
        canProceedToTest = false;
      }
    }

    if (canProceedToTest) {
      feedbackText =
        "<div class = centerbox><p class = center-block-text>We will now start the test portion.</p>" +
        '<p class="block-text">Keep your fingers on the arrow keys.</p>';

      feedbackText +=
        "<p class = block-text>Press <i>enter</i> to continue.</p></div>";

      expStage = "test";
      return false;
    } else {
      feedbackText =
        "<div class = centerbox><p class = block-text>Please take this time to read your feedback! This screen will advance automatically in 1 minute.</p>";

      if (partialAccuracy < partialAccuracyThresh) {
        feedbackText +=
          "<p class = block-text>Your accuracy for the 4x4 grid is low.</p>" +
          "<p class = block-text>Try your best to recall the black colored cells.</p>";
      }

      if (avgProcessingAcc < processingAccThresh) {
        feedbackText +=
          "<p class = block-text>Your accuracy for the 8x8 grid is low.</p>" +
          `<p class = block-text>Try your best determining if the 8x8 grid is ${
            processingChoices[0].keyname === "left arrow key"
              ? "symmetric"
              : "asymmetric"
          } (left arrow key) or ${
            processingChoices[0].keyname === "left arrow key"
              ? "asymmetric"
              : "symmetric"
          } (right arrow key).</p>`;
      }
      if (avgProcessingRT > processingRTThresh) {
        feedbackText +=
          "<p class = block-text>You are responding too slowly to the 8x8 grids when they appear on the screen.</p>" +
          `<p class = block-text>Try to respond (left arrow/right arrow) as quickly as accurately as possible as possible.</p>`;
      }

      feedbackText +=
        `<p class="block-text">We are now going to repeat the practice round.</p>` +
        `<p class="block-text">Press <i>enter</i> to begin.</p></div>`;

      return true;
    }
  },
};

var postTaskQuestion =
  "Do you have any comments, concerns, or issues pertaining to this task?";

var postTaskBlock = {
  type: jsPsychSurveyText,
  questions: [
    {
      prompt: `<h1 class=block-text>${postTaskQuestion}</h1>`,
      name: postTaskQuestion,
      required: false,
      rows: 20,
      columns: 80,
    },
  ],
  response_ends_trial: true,
  data: {
    trial_id: "post_task_feedback",
  },
  on_finish: function (data) {
    data.question = postTaskQuestion;
    data.response = data.response[postTaskQuestion];
  },
};

var fullscreen = {
  type: jsPsychFullscreen,
  fullscreen_mode: true,
};
var exitFullscreen = {
  type: jsPsychFullscreen,
  fullscreen_mode: false,
};

var endBlock = {
  type: jsPsychHtmlKeyboardResponse,
  data: {
    trial_id: "end",
    exp_id: "operation_span_rdoc__screener",
    trial_duration: 180000,
  },
  trial_duration: 180000,
  stimulus: endText,
  choices: ["Enter"],
  on_finish: data => {
    const FLAG_PARTIAL_ACCURACY_THRESHOLD = 0.25;
    const FLAG_PROCESSING_ACCURACY_THRESHOLD = 0.6;
    const FLAG_PROCESSING_RT_THRESHOLD = 1250;

    const PRACTICE_PARTIAL_ACCURACY_THRESHOLD = partialAccuracyThresh;
    const PRACTICE_PROCESSING_ACCURACY_THRESHOLD = processingAccThresh;
    const PRACTICE_PROCESSING_RT_THRESHOLD = processingRTThresh;

    if (practiceCount < practiceThresh) {
      data.include_subject = 1;
      return;
    }

    const practiceProcessingTrials = jsPsych.data
      .get()
      .filter({ trial_id: "practice_inter-stimulus" }).trials;

    const finalBlockProcessingTrials = jsPsych.data.get().filter({
      trial_id: "practice_inter-stimulus",
      block_num: practiceThresh - 1,
    }).trials;

    const practiceResponseTrials = jsPsych.data
      .get()
      .filter({ trial_id: "practice_trial" }).trials;

    const finalBlockResponseTrials = jsPsych.data.get().filter({
      trial_id: "practice_trial",
      block_num: practiceThresh - 1,
    }).trials;

    const evaluateResponseTrials = trials => {
      const correctTrialsCount = trials.filter(
        obj => obj.correct_trial === 1
      ).length;

      const partialAccuracy =
        trials.reduce((acc, trial) => {
          const { response, spatial_sequence } = trial;
          const correctCount = spatial_sequence.filter(item =>
            response.includes(item)
          ).length;
          const accuracy = correctCount / spatial_sequence.length;
          return acc + accuracy;
        }, 0) / trials.length;

      return {
        accuracy: correctTrialsCount / trials.length,
        partialAccuracy,
      };
    };

    const evaluateProcessingTrials = trials => {
      const correctTrialsCount = trials.filter(
        obj => obj.correct_trial === 1
      ).length;

      const responseTimes = trials
        .filter(obj => obj.rt !== null && obj.correct_trial === 1)
        .map(obj => obj.rt);

      const meanResponseTime =
        responseTimes.reduce((acc, rt) => acc + rt, 0) / responseTimes.length;

      return {
        accuracy: correctTrialsCount / trials.length,
        meanResponseTime,
      };
    };

    const overallResponsePerformance = evaluateResponseTrials(
      practiceResponseTrials
    );
    const overallProcessingPerformance = evaluateProcessingTrials(
      practiceProcessingTrials
    );

    const finalBlockResponsePerformance = evaluateResponseTrials(
      finalBlockResponseTrials
    );
    const finalBlockProcessingPerformance = evaluateProcessingTrials(
      finalBlockProcessingTrials
    );

    console.log(overallResponsePerformance);
    console.log(overallProcessingPerformance);
    console.log(finalBlockResponsePerformance);
    console.log(finalBlockProcessingPerformance);

    const isSubjectIncludedFlag = (
      responsePerformance,
      processingPerformance
    ) => {
      return (
        responsePerformance.accuracy >= FLAG_PARTIAL_ACCURACY_THRESHOLD &&
        processingPerformance.meanResponseTime <=
          FLAG_PROCESSING_RT_THRESHOLD &&
        processingPerformance.accuracy >= FLAG_PROCESSING_ACCURACY_THRESHOLD
      );
    };

    const isSubjectIncludedPractice = (
      responsePerformance,
      processingPerformance
    ) => {
      return (
        responsePerformance.accuracy >= PRACTICE_PARTIAL_ACCURACY_THRESHOLD &&
        processingPerformance.meanResponseTime <=
          PRACTICE_PROCESSING_RT_THRESHOLD &&
        processingPerformance.accuracy >= PRACTICE_PROCESSING_ACCURACY_THRESHOLD
      );
    };

    data.include_subject =
      isSubjectIncludedFlag(
        overallResponsePerformance,
        overallProcessingPerformance
      ) ||
      isSubjectIncludedPractice(
        finalBlockResponsePerformance,
        finalBlockProcessingPerformance
      )
        ? 1
        : 0;

    console.log(data.include_subject);
  },
};

operation_span_rdoc__screener_experiment = [];
var operation_span_rdoc__screener_init = () => {
  operation_span_rdoc__screener_experiment.push(fullscreen);
  operation_span_rdoc__screener_experiment.push(instructionNode);
  operation_span_rdoc__screener_experiment.push(tutorial);
  operation_span_rdoc__screener_experiment.push(practiceNode);
  operation_span_rdoc__screener_experiment.push(postTaskBlock);
  operation_span_rdoc__screener_experiment.push(endBlock);
  operation_span_rdoc__screener_experiment.push(exitFullscreen);
};
